presets:
  # names from https://rgbacode.com
  - &white-smoke: "#F8F8F2"
  - &charcoal: "#32424A"
  - &dark-jungle-green: "#1E272C"
  - &auto-metal-saurus: "#666B87"
  - &pastel_blue: "#B0BEC5"
  - &tomato: "#FF5555"
  - &dark-cyan: "#009688"
  - &davy-grey: "#525253"
  - &medium-jungle-green: "#282A36"
  - &bleu-de-france: "#287BDE" # textlink.activeforeground
  - &cornflower-blue: "#589DF6" # textlink.foreground
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""
  - &: ""

workbench:
  # base colors
  foreground: &foreground  # -> white (HC)
    dark: ""
    light: ""
    hc: ""
  errorForeground:         # -> (D/HC)
    dark: ""
    light: ""
    hc: ""
  descriptionForeground:   # -> foreground 70% (D/HC)
    dark: ""
    light: ""
    hc: ""
  icon.foreground:         # -> white (HC)
    dark: ""
    light: ""
    hc: ""
  focusBorder: &focusBorder
    dark: ""
    light: ""
    hc: ""
  contrastBorder: &contrastBorder
    hc: "#6FC3DF"
  contrastActiveBorder: &contrastActiveBorder   # -> null (D/L), contrastBorder (HC)
    <<: *contrastBorder
  selection.background:    # -> null

  # text colors
  textSeparator.foreground:  # -> white #2E (D), black #2E (L), black (HC)
    dark: "FFFFFF2E"
    light: "#0000002E"
    hc: "#000"
  textLink.foreground:       # -> (D/HC)
    dark: "#589DF6"
    light: ""
    hc: "#589DF6"
  textLink.activeForeground: # -> (D/HC)
    dark: "#287BDE"
    light: ""
    hc: "#287BDE"
  textPreformat.foreground:  # -> (D/HC)
    dark: "#FFB86C"
    light: ""
    hc: "#FFB86C"
  textBlockQuote.background: # -> #1A (D/L), null (HC)
    dark: "282A361A"
    light: ""
  textBlockQuote.border:     # -> #80 (D/L), white (HC)
    dark: ""
    light: ""
    hc: ""
  textCodeBlock.background:  # -> #66 (D/L), black (HC)
    dark: ""
    light: ""
    hc: ""
  
  # widgets
  widget.shadow:   # -> black 36%, black 16%, null
    dark: ""
    light: ""

  # input
  input.background:                # -> white (L), black (HC)
    dark: ""
    light: ""
    hc: ""
  input.foreground: *foreground
  input.border:                    # -> null, contrastBorder (HC)
    <<: *contrastBorder
  inputOption.activeBorder:        # -> 0% (D/L), contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder
  inputOption.activeBackground:    # -> focusBorder (40% D, 20% L), 0% (HC)
    dark: ""
    light: ""
    hc: ""
  inputOption.activeForeground:    # -> white, black, null
    dark: ""
    light: ""
  input.placeholderForeground:     # -> foreground (50% D/L, 70% HC)
    dark: ""
    light: ""
    hc: ""

  # input validation
  inputValidation.infoBackground:    # -> black (HC)
    dark: ""
    light: ""
    hc: ""
  inputValidation.infoForeground:    # -> null
  inputValidation.infoBorder:        # -> (D/L), contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder
  inputValidation.warningBackground: # -> black (HC)
    dark: ""
    light: ""
    hc: ""
  inputValidation.warningForeground: # -> null
  inputValidation.warningBorder:     # -> (D/L), contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder
  inputValidation.errorBackground:   # -> black (HC)
    dark: ""
    light: ""
    hc: ""
  inputValidation.errorForeground:   # -> null
  inputValidation.errorBorder:       # -> (D/L), contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder
  
  # dropdown
  dropdown.background: &dropdown.background       # -> white (L), black (HC)
    dark: ""
    light: ""
    hc: ""
  dropdown.listBackground:   # -> null, black (HC)
    hc: ""
  dropdown.foreground: &dropdown.foreground       # -> null (L), white (HC)
    dark: ""
    # light: ""
    hc: ""
  dropdown.border: &dropdown.border           # -> dropdown.background (D), contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder
  
  # checkbox
  checkbox.background: *dropdown.background
  checkbox.foreground: *dropdown.foreground
  checkbox.border: *dropdown.border

  # button
  button.foreground:               # -> white
    dark: ""
    light: ""
    hc: ""
  button.background:               # -> null (HC)
    dark: ""
    light: ""
  button.hoverBackground:          # -> button.background light 20%, button.background dark 20%, null
    dark: ""
    light: ""
  button.border: *contrastBorder                  # -> contrastBorder
  button.secondaryForeground:      # -> white
    dark: ""
    light: ""
    hc: ""
  button.secondaryBackground:      # -> null (HC)
    dark: ""
    light: ""
  button.secondaryHoverBackground: # -> button.secondaryBackground light 20%, button.secondaryForeground dark 20%, null
    dark: ""
    light: ""

  # badge
  badge.background:  # -> black (HC)
    dark: ""
    light: ""
    hc: ""
  badge.foreground:  # -> white (D), black (HC)
    dark: ""
    light: ""
    hc: ""

  # scrollbar
  scrollbar.shadow:                  # -> black (D), null (HC)
    dark: ""
    light: ""
  scrollBarSlider.background:        # -> 40% (D/L), contrastBorder 60% (HC)
    dark: ""
    light: ""
    hc: ""
  scrollBarSlider.hoverBackground:   # -> 70% (D/L), contrastBorder 80% (HC)
    dark: ""
    light: ""
    hc: ""
  scrollBarSlider.activeBackground:  # -> 40%, 60%, contrastBorder
    dark: ""
    light: ""
    <<: *contrastBorder

  # progress bar
  progressBar.background:    # -> (D/L), contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder

  # editor annotations
  editorError.background:    # -> null
  editorError.foreground: &editorError.foreground   # -> null (HC)
    dark: ""
    light: ""
  editorError.border:        # -> null, 80% (HC)
    hc: ""
  editorWarning.background:  # -> null
  editorWarning.foreground: &editorWarning.foreground  # -> null (HC)
    dark: ""
    light: ""
  editorWarning.border: &editorWarning.border      # -> null, 80% (HC)
    hc: ""
  editorInfo.background:     # -> null
  editorInfo.foreground: &editorInfo.foreground    # -> (D/L), 80% (HC)
    dark: ""
    light: ""
    hc: ""
  editorInfo.border:         # -> null, 80% (HC)
    hc: ""
  editorHint.foreground:     # -> 70% (D), null (HC)
    dark: ""
    light: ""
  editorHint.border:         # -> null, 80% (HC)
    hc: ""
  sash.hoverBorder: *focusBorder          # -> focusBorder

  # editor colors
  editor.background: &editor.background  # -> black (HC)
    dark: ""
    light: ""
    hc: ""
  editor.foreground:   # -> white (HC)
    dark: ""
    light: ""
    hc: ""

  # editor widgets
  editorWidget.background: &editorWidget.background
    dark: ""
    light: ""
    hc: ""
  editorWidget.foreground: &editorWidget.foreground  # -> foreground
    <<: *foreground
  editorWidget.border: &editorWidget.border       # -> contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder
  editorWidget.resizeBorder: # -> null

  # quick picker
  quickInput.background: *editorWidget.background
  quickInput.foreground: *editorWidget.foreground
  quickInputTitle.background:  # -> black 10.5%, white 6%, black
    dark: ""
    light: ""
    hc: ""
  pickerGroup.foreground:      # -> white (HC)
    dark: ""
    light: ""
    hc: ""
  pickerGroup.border:          # -> white (HC)
    dark: ""
    light: ""
    hc: ""

  # keybinding labels
  keybindingLabel.background:    # -> 17%, 40%, 0%
    dark: ""
    light: ""
    hc: ""
  keybindingLabel.foreground:    # -> white (HC)
    dark: ""
    light: ""
    hc: ""
  keybindingLabel.border:        # -> 60%, 40%, 100%
    dark: ""
    light: ""
    hc: ""
  keybindingLabel.bottomBorder:  # -> 60%, 40%, 100%
    dark: ""
    light: ""
    hc: ""

  # editor selection
  editor.selectionBackground:
    dark: ""
    light: ""
    hc: ""
  editor.selectionForeground:          # -> null, black (HC)
    hc: ""
  editor.inactiveSelectionBackground:  # -> editor.selectionBackground 50%
    dark: ""
    light: ""
    hc: ""
  editor.selectionHighlightBackground: # -> editor.selectionBackground editor.background 30% 60% lessProminent, null (HC)
    dark: ""
    light: ""
    hc: ""
  editor.selectionHighlightBorder:     # -> null, contrastActiveBorder (HC)
    <<: *contrastActiveBorder

  # editor find match
  editor.findMatchBackground:          # -> null (HC)
    dark: ""
    light: ""
  editor.findMatchHighlightBackground: &editor.findMatchHighlightBackground # -> #EA5C0055 (D/L), null (HC)
    dark: ""
    light: ""
  editor.findRangeHighlightBackground: # -> #3A3D4166, #B4B4B44D, null
    dark: ""
    light: ""
  editor.findMatchBorder:              # -> null, contrastActiveBorder (HC)
    <<: *contrastActiveBorder
  editor.findMatchHighlightBorder: &editor.findMatchHighlightBorder     # -> null, contrastActiveBorder (HC)
    <<: *contrastActiveBorder
  editor.findRangeHighlightBorder:     # -> null, contrastActiveBorder 40% (HC)
    hc: ""

  # Search Editor query match
  searchEditor.findMatchBackground:  # -> editor.findMatchHighlightBackground (66%, 100% HC)
    dark: ""
    light: ""
    hc: ""
  searchEditor.findMatchBorder:      # -> editor.findMatchHighlightBorder (66%, 100% HC)
    dark: ""
    light: ""
    hc: ""

  # editor hover
  editor.hoverHighlightBackground:       # -> (D/HC)
    dark: ""
    light: ""
    hc: ""
  editorHoverWidget.background: *editorWidget.background
  editorHoverWidget.foreground: *editorWidget.foreground
  editorHoverWidget.border: *editorWidget.border
  editorHoverWidget.statusBarBackground: # -> editor.hoverBackground (20% D, 5% L, 100% HC)
    dark: ""
    light: ""
    hc: ""

  # editor link
  editorLink.activeForeground:   # -> blue (L), cyan (HC)
    dark: ""
    light: ""
    hc: ""

  # inline hints
  editorInlayHint.foreground:  # -> badgeForeground (80%, 100% HC)
    dark: ""
    light: ""
    hc: ""
  editorInlayHint.background:  # -> badgeBackground (60%, 100% HC)
    dark: ""
    light: ""
    hc: ""
  
  # editor lightbulb icon
  editorLightBulb.foreground:          # -> (D/HC)
    dark: ""
    light: ""
    hc: ""
  editorLightBulbAutoFix.foreground:   # -> (D/HC)
    dark: ""
    light: ""
    hc: ""
  
  # diff editor
  diffEditor.insertedTextBackground:   # -> 20%, null (HC)
    dark: ""
    light: ""
  diffEditor.removedTextBackground:    # -> 20%, null (HC)
    dark: ""
    light: ""
  diffEditor.insertedTextBorder:       # -> null, #33FF2EFF (HC)
    hc: ""
  diffEditor.removedTextBorder:        # -> null, #FF008F (HC)
    dark: ""
    light: ""
    hc: ""
  diffEditor.border:                   # -> null, contrastBorder (HC)
    <<: *contrastBorder
  diffEditor.diagonalFill:             # -> null (HC)
    dark: ""
    light: ""

  # lists and trees
  list.focusBackground:                  # -> null
  list.focusForeground:                  # -> null
  list.focusOutline:                     # -> focusBorder, contrastActiveBorder (HC)
    <<: *focusBorder
    <<: *contrastActiveBorder
  list.activeSelectionBackground: &list.activeSelectionBackground        # -> null (HC)
    dark: ""
    light: ""
  list.activeSelectionForeground: &list.activeSelectionForeground        # -> white, null (HC)
    dark: ""
    light: ""
  list.activeSelectionIconForeground: &list.activeSelectionIconForeground   # -> null
  list.inactiveSelectionBackground:      # -> null (HC)
    dark: ""
    light: ""
  list.inactiveSelectionForeground:      # -> null
  list.inactiveSelectionIconForeground:  # -> null
  list.inactiveFocusBackground:          # -> null
  list.inactiveFocusOutline:             # -> null
  list.hoverBackground:                  # -> null (HC)
    dark: ""
    light: ""
  list.hoverForeground:                  # -> null
  list.dropBackground:                   # -> null (HC)
    dark: ""
    light: ""
  list.highlightForeground:               # -> focusBorder (HC)
    dark: ""
    light: ""
    <<: *focusBorder
  list.focusHighlightForeground:         # -> list.highlightForeground (D/HC), list.activeSelectionBackground|list.highlightForeground|#9DDDFF (L)
    dark: ""
    light: ""
    hc: ""
  list.invalidItemForeground:            # -> (D/L/HC)
    dark: ""
    light: ""
    hc: ""
  list.errorForeground:                  # -> null (HC)
    dark: ""
    light: ""
  list.warningForeground:                # -> null (HC)
    dark: ""
    light: ""
  listFilterWidget.background:           # -> black (HC)
    dark: ""
    light: ""
    hc: ""
  listFilterWidget.outline:              # -> 0%, #F38518 (HC)
    dark: ""
    light: ""
    hc: ""
  listFilterWidget.noMatchesOutline:     # -> contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder
  list.filterMatchBackground:            # -> editor.findMatchHighlightBackground, null (HC)
    <<: *editor.findMatchHighlightBackground
  list.filterMatchBorder:                # -> editor.findMatchHighlightBorder, contrastBorder (HC)
    <<: *editor.findMatchHighlightBorder
    <<: *contrastBorder
  tree.indentGuidesStroke:               # -> D, (l/HC)
    dark: ""
    light: ""
    hc: ""
  tree.tableColumnsBorder:               # -> null (HC)
    dark: ""
    light: ""
  list.deemphasizedForeground:
    dark: ""
    light: ""
    hc: ""

  # quick pick widget (list/tree)
  quickInputList.focusForeground: *list.activeSelectionForeground
  quickInputList.focusIconForeground: *list.activeSelectionIconForeground
  quickInputList.focusBackground:      # -> list.activeSelectionBackground, null (HC)
    <<: *list.activeSelectionBackground
    # hc: null

  # menu
  menu.border:               # -> null, contrastBorder (HC)
    <<: *contrastBorder
  menu.foreground:           # -> dropdown.foreground (D/HC), foreground (L)
    dark: ""
    light: ""
    hc: ""
  menu.background: *dropdown.background
  menu.selectionForeground: *list.activeSelectionForeground
  menu.selectionBackground: *list.activeSelectionBackground
  menu.selectionBorder:      # -> null, contrastActiveBorder (HC)
    <<: *contrastActiveBorder
  menu.separatorBackground:  # -> contrastBorder (HC)
    dark: ""
    light: ""
    <<: *contrastBorder

  # toolbar
  toolbar.hoverBackground:   # -> #50, null (HC)
    dark: ""
    light: ""
  toolbar.hoverOutline:      # -> null, contrastActiveBorder (HC)
    <<: *contrastActiveBorder
  toolbar.activeBackground:  # -> toolbarHoverBackground light 10%, toolbarHoverBackground dark 10%, null
    dark: ""
    light: ""

  # snippet placeholders
  editor.snippetTabstopHighlightBackground:      # -> (D/HC) 30%, (L) 20%
    dark: ""
    light: ""
    hc: ""
  editor.snippetTabstopHighlightBorder:          # -> null
  editor.snippetFinalTabstopHighlightBackground: # -> null
  editor.snippetFinalTabstopHighlightBorder:     # -> (D/HC)
    dark: ""
    light: ""
    hc: ""

  # breadcrumbs
  breadcrumb.foreground:                 # -> foreground 80%
    dark: ""
    light: ""
    hc: ""
  breadcrumb.background: *editor.background
  breadcrumb.focusForeground:            # -> foreground dark 20%, foreground light 10% (L/HC)
    dark: ""
    light: ""
    hc: ""
  breadcrumb.activeSelectionForeground:  # -> foreground dark 20%, foreground light 10% (L/HC)
    dark: ""
    light: ""
    hc: ""
  breadcrumbPicker.background: *editorWidget.background

  # merge conflicts
  merge.currentHeaderBackground: &merge.currentHeaderBackground    # -> 50%, null (HC)
    dark: ""
    light: ""
  merge.currentContentBackground:    # -> merge.currentHeaderBackground 40%
    dark: ""
    light: ""
    hc: ""
  merge.incomingHeaderBackground: &merge.incomingHeaderBackground    # -> 50%, null (HC)
    dark: ""
    light: ""
  merge.incomingContentBackground:   # -> merge.incomingHeaderBackground 40%
    dark: ""
    light: ""
    hc: ""
  merge.commonHeaderBackground: &merge.commonHeaderBackground      # -> 40%, null (HC)
    dark: ""
    light: ""
  merge.commonContentBackground:     # -> merge.commonHeaderBackground 40%
    dark: ""
    light: ""
    hc: ""
  merge.border: &merge.border                     # -> null, #C3DF6F (HC)
    hc: ""
  
  # editor overview ruler
  editorOverviewRuler.currentContentForeground:      # -> merge.currentHeaderBackground, merge.border (HC)
    <<: *merge.currentHeaderBackground
    <<: *merge.border
  editorOverviewRuler.incomingContentForeground:     # -> merge.incomingHeaderBackground, merge.border (HC)
    <<: *merge.incomingHeaderBackground
    <<: *merge.border
  editorOverviewRuler.commonContentForeground:       # -> merge.commonHeaderBackground, merge.border (HC)
    <<: *merge.commonHeaderBackground
    <<: *merge.border
  editorOverviewRuler.findMatchForeground:           # -> (D/L)
    dark: ""
    light: ""
    hc: ""
  editorOverviewRuler.selectionHighlightForeground:  # -> (D/L/HC)
    dark: ""
    light: ""
    hc: ""
  
  # minimap
  minimap.findMatchHighlight: &minimap.findMatchHighlight      # -> (D/L)
    dark: ""
    light: ""
    hc: ""
  minimap.selectionHighlight:      # -> white (HC)
    dark: ""
    light: ""
    hc: ""
  minimap.errorHighlight:          # -> (D/L) 70%
    dark: ""
    light: ""
    hc: ""
  minimap.warningHighlight:        # -> editorWarning.foreground, editorWarning.border (HC)
    <<: *editorWarning.foreground
    <<: *editorWarning.border
  minimap.background:              # -> null
  minimapSlider.background:        # -> scrollBarSlider.background 50%
    dark: ""
    light: ""
    hc: ""
  minimapSlider.hoverBackground:   # -> scrollBarSlider.hoverBackground 50%
    dark: ""
    light: ""
    hc: ""
  minimapSlider.activeBackground:  # -> scrollBarSlider.activeBackground 50%
    dark: ""
    light: ""
    hc: ""
  problemsErrorIcon.foreground: *editorError.foreground
  problemsWarningIcon.foreground: *editorWarning.foreground
  problemsInfoIcon.foreground: *editorInfo.foreground

  # charts
  charts.foreground: *foreground
  charts.lines:      # -> foreground 50%
    dark: ""
    light: ""
    hc: ""
  charts.red: *editorError.foreground
  charts.blue: *editorInfo.foreground
  charts.yellow: *editorWarning.foreground
  charts.orange: *minimap.findMatchHighlight
  charts.green:      # -> (D/HC)
    dark: ""
    light: ""
    hc: ""
  charts.purple:     # -> (D/HC)
    dark: ""
    light: ""
    hc: ""
